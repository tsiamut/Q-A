[["index.html", "R Q&amp;A 前言", " R Q&amp;A 予堂 前言 在这里，将会汇总一系列 R 语言的常见问题及解答 "],["常见问题.html", "1 常见问题 1.1 安装问题 1.2 package 无法安装的问题", " 1 常见问题 1.1 安装问题 github 上 项目错误被当成pacakge，进行安装 github 上的 package ，会在 README.md 中有明显的提示安装信息： devtools::install_github(&#39;github-name/pkg-name&#39;) 或者是： remotes::install_github(&#39;github-name/pkg-name&#39;) 这样类似的代码，其中 github-name 用以表示当前 github 账户名称，pkg-name 表示当前项目名称。 如果已经提交到 CRAN上，会显示有： install.packages(&#39;pkg-name&#39;) 类似代码 1.2 package 无法安装的问题 产生的原因可能有以下几种： Windows 系统电脑的用户名为中文 用户名中含有空格 R 安装在 C 盘中，导致下载安装时其权限受阻，此时建议 右键以管理员身份启动 RStudio 镜像设置不合理，未采用国内镜像进行下载。 Console 区域输入并运行： chooseCRANmirror() 或者在 RStudio 中进行设置：Tools &gt; Global Options &gt; Packages 中进行设置。 更加推荐的方式是在 Rprofile 中设置镜像网站： options(repos=&quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN&quot;) #options(repos = &quot;https://mirrors.tongji.edu.cn/CRAN&quot; ) 便于启动后，自动更改其镜像设置。镜像选择不合理，容易导致下载速度过慢，以及在部分情况下无法顺利安装。 Windows 系统用户未安装 Rtools 40, 在安装或升级包时，直接选择了编译操作。建议Windows 系统用户在安装 R 的同时，安装 Rtools 安装时常见的 None zero 问题，如 rlang, vctrs 包常有遇见，此时往往需要卸载 rlang 等，选择重新安装。 或者是先彻底删除 0Check 等文件，将出现该问题包的文件彻底删除后，再重新安装或升级。 例如在以下链接中Windows user space issues with installing R packages 讲述了关于因空格问题导致无法安装，以及该作者提出的解决方案。 "],["关于-r-cmd-command.html", "2 关于 R CMD command 2.1 添加环境变量 2.2 cmd 窗口", " 2 关于 R CMD command 事实上，绝大多数用户在日常使用中并不会涉及到 R CMD command 这个工具。相反，目前在包的开发领域，也越来越多地被devtools::check() 所代替。同样地，也有 rcmdcheck 包的出现，这些都在让 R cmd check 逐渐淡出大多数用户的实现。除此以外，你也选择使用rhub 包进行检查。 但从很多问题的解决上来讨论，面向更多的使用者，把R CMD command 的很多知识点讲述清楚，仍是有必要。 除此以外，也涉及到很多基本知识的讲解。 2.1 添加环境变量 首先，对于大多数用户而言，是第一次将 R语言添加到环境变量中来，这里简要地介绍完整的操作步骤： 首先，通过“此电脑”，右键选择“属性”，进入后，弹出下面所示的窗口： 在右侧选择：高级系统设置，进入后： 选择“环境变量” 接着进入： 当前界面中有两个 Path 变量可供修改，读者可以自行选择当前用户名下的变量修改，抑或是系统变量中的 path 修改，点击编辑选项，进入后弹出： 点击新建，随后点击“浏览”，选择当前电脑上 R 语言的安装路径，并继续选择R语言的安装路径下的 bin/x64 文件夹，将其添加到新建项中。随后点击“确定”，返回，并一直返回到起始页面中。 备注内容：关于遗忘R语言的安装路径问题，可以通过： R.home() 查询当前R版本对应的安装路径。 2.2 cmd 窗口 Windows 系统通过 win + R 快捷键(即同时按下 Win 键和 R 键，或者按下 Win 键不放，接着按下 R 键)，打开运行窗口： "],["arrange-list-of-plots.html", "3 arrange list of plots 3.1 list 3.2 plotlist-cowplot", " 3 arrange list of plots 目前 ggplot 绘图系统主要使用的可用于拼图的包有： patchwork， cowplot 等，至于 gridExtra, aplot 我们暂且不谈。 至于具体的入门教程，很显然 patchwork 包的 主页上提供的 Vignettes: Getting started 中已经给出了通俗易懂的方法：使用 “+” 的语法，将 多个 ggplot2 对象进行拼接操作。 除此以外，cowplot 的 Vignettes: Introduction to cowplot 也给出了 plot_grid() 的简单使用方法。 但以上的内容都是针对多个 ggplot2 对象进行操作，事实上，还有另一种情况：列表中包含多个 ggplot2 的对象，这往往主要是采用 for 循环一类批量绘图得到的列表对象，或者是将获得的十余个或几十个变量保存到一个列表中。 其关键在于：列表中的各个元素均为 ggplot2 对象。 这里，我们以 women 数据集为例，汇总散点图和折线图为例，将其保存为变量 p1, 接着重复生成其余7个变量：p2 到 p8 library(ggplot2) p1 &lt;- ggplot(women,aes(height,weight)) + geom_line() + geom_point() p8 &lt;- p7 &lt;- p6 &lt;- p5 &lt;- p4 &lt;- p3 &lt;- p2 &lt;- p1 接着用 patchwork 进行拼图： library(patchwork) paste0(&#39;p&#39;,1:8, collapse = &#39; + &#39;) -&gt; a a ## [1] &quot;p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8&quot; eval(parse(text = a)) + plot_layout(nrow = 2) 变量 a 为字符串格式，采用 paste0() 生成p1到p8 之间以 “+” 相连的字符串，接着使用 eval(parse(text =a))将其运行并在末尾继续使用 “+”语法添加 plot_layout() 语句。 这种方式仅仅局限于如： 许多个变量时的情况，对于列表里的元素操作就不建议如此操作。并且，一次性生成的众多的 ggplot2 对象，大多数情况下变量名都是具有规律性的。而对于混乱且没有统一性的变量名，还是建议老老实实地手动写完进行拼图。 3.1 list 事实上，cowplot 与 patchwork 本身已经支持了 对于list 中众多 ggplot2 对象拼图的语法支持，只是因为大多数自媒体的宣传，且大部分的教程都是完全相同的框架，与 cowplot, patchwork 的 Vignettes 中的内容并无太大区别，都是限于多个对象时的拼图。这很容易让初学者忽略掉包里的其他函数和主函数的重要参数。 解决问题的重要途径是：读文档！ 以 patchwork 为例，阅读文档后，便会注意到：wrap_plots() 函数： wrap_plots() 函数支持将 list 对象用于拼图，至于使用的方法可以参考该函数的示例部分： example(&quot;wrap_plots&quot;) 在这里，针对已有的p1 到 p8 的变量，将其保存到列表中，并用wrap_plots() 进行拼图： p1 &lt;- ggplot(women,aes(height,weight)) + geom_line() + geom_point() p8 &lt;- p7 &lt;- p6 &lt;- p5 &lt;- p4 &lt;- p3 &lt;- p2 &lt;- p1 b &lt;- list(p1,p2,p3,p4,p5,p6,p7,p8) library(patchwork) wrap_plots(b) 但很多人会有疑问，如何批量将多个变量保存到列表中？ 很显然，上面的手动生成列表的方式，对于几十个元素而言，并不高效。对于这个问题，之后的相关章节中会进一步展开讨论。这里暂不叙述。 3.2 plotlist-cowplot 对于 cowplot 包，其主函数plot_grid() 的第二个参数就尤为重要。 ..., plotlist = NULL, ...) plot_grid() 的第二个参数 plotlist 接收list对象，用以拼图。但这个函数并不等同于 patchwork 包中的 wrap_plots() 函数的第一个参数可以同时接收多个对象或者是一个列表对象。因此，需要引起格外重视。 p1 &lt;- ggplot(women,aes(height,weight)) + geom_line() + geom_point() p8 &lt;- p7 &lt;- p6 &lt;- p5 &lt;- p4 &lt;- p3 &lt;- p2 &lt;- p1 b &lt;- list(p1,p2,p3,p4,p5,p6,p7,p8) cowplot::plot_grid(plotlist = b) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
